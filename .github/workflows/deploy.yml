name: Deploy to Server

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python -m pytest tests/ -v || echo "No tests found, continuing..."

    - name: Lint Python code
      run: |
        python -m flake8 --max-line-length=100 --ignore=E501,W503 *.py || echo "Linting completed with warnings"

    - name: Deploy to server
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          set -e
          echo "🚀 Starting deployment..."
          
          # Navigate to deployment directory
          cd ${{ secrets.DEPLOY_PATH || '/home/thecroxdevil/jellyfin-setup' }}
          
          # Backup current configuration
          echo "📦 Creating backup..."
          sudo cp docker-compose.yml docker-compose.yml.backup.$(date +%Y%m%d_%H%M%S) || true
          
          # Pull latest changes
          echo "📥 Pulling latest changes..."
          git fetch origin
          git reset --hard origin/main
          
          # Install/update Python dependencies
          echo "🐍 Installing Python dependencies..."
          python3 -m pip install --user -r requirements.txt || echo "Failed to install some dependencies, continuing..."
          
          # Create required directories
          echo "📁 Creating required directories..."
          mkdir -p media/{movies,tv,music,photos} jellyfin_config xteve_config npm_data letsencrypt
          
          # Set permissions
          echo "🔐 Setting permissions..."
          sudo chown -R $USER:$USER . || true
          chmod +x scripts/*.sh || true
          
          # Run any pre-deployment scripts
          echo "🔧 Running pre-deployment tasks..."
          if [ -f scripts/pre-deploy.sh ]; then
            bash scripts/pre-deploy.sh
          fi
          
          # Stop existing containers
          echo "⏹️ Stopping existing containers..."
          docker-compose down || echo "No containers to stop"
          
          # Pull latest images
          echo "📦 Pulling latest Docker images..."
          docker-compose pull
          
          # Start services
          echo "▶️ Starting services..."
          docker-compose up -d
          
          # Wait for services to be ready
          echo "⏳ Waiting for services to be ready..."
          sleep 30
          
          # Health check
          echo "🏥 Running health checks..."
          bash scripts/health-check.sh || echo "Health check failed, but continuing..."
          
          # Run post-deployment scripts
          echo "✅ Running post-deployment tasks..."
          if [ -f scripts/post-deploy.sh ]; then
            bash scripts/post-deploy.sh
          fi
          
          echo "🎉 Deployment completed successfully!"
          
          # Show container status
          echo "📊 Container status:"
          docker-compose ps

    - name: Notify deployment status
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
